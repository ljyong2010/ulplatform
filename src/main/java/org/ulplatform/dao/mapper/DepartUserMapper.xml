<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ulplatform.dao.mapper.DepartUserMapper">
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="org.ulplatform.dao.DepartUser">
    <result column="USERID" jdbcType="VARCHAR" property="userid" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="ORGANNAME" jdbcType="VARCHAR" property="organname" />
    <result column="DEPARTNAME" jdbcType="VARCHAR" property="departname" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="ZIPCODE" jdbcType="VARCHAR" property="zipcode" />
    <result column="BIRTHDAY" jdbcType="VARCHAR" property="birthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USERID, USERNAME, ORGANNAME, DEPARTNAME, EMAIL, QQ, TELEPHONE, PHONE, ADDRESS, ZIPCODE, 
    BIRTHDAY
  </sql>
  <select id="selectByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.ulplatform.dao.DepartUserExample">
    delete from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER (USERID, USERNAME, ORGANNAME, 
      DEPARTNAME, EMAIL, QQ, 
      TELEPHONE, PHONE, ADDRESS, 
      ZIPCODE, BIRTHDAY)
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{departname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ulplatform.dao.DepartUser">
    insert into DEPARTUSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        USERID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="organname != null">
        ORGANNAME,
      </if>
      <if test="departname != null">
        DEPARTNAME,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="zipcode != null">
        ZIPCODE,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="organname != null">
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="departname != null">
        #{departname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ulplatform.dao.DepartUserExample" resultType="java.lang.Long">
    select count(*) from DEPARTUSER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEPARTUSER
    <set>
      <if test="record.userid != null">
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.organname != null">
        ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      </if>
      <if test="record.departname != null">
        DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null">
        ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEPARTUSER
    set USERID = #{record.userid,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      ORGANNAME = #{record.organname,jdbcType=VARCHAR},
      DEPARTNAME = #{record.departname,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      TELEPHONE = #{record.telephone,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      ZIPCODE = #{record.zipcode,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>